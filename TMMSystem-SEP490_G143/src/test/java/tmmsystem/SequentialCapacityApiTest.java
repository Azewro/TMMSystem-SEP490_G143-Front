package tmmsystem;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import java.math.BigDecimal;

@SpringBootTest
@ActiveProfiles("test")
public class SequentialCapacityApiTest {

    @Test
    public void testSequentialCapacityApi() {
        System.out.println("=== KI·ªÇM TRA API NƒÇNG L·ª∞C TU·∫¶N T·ª∞ ===");
        
        System.out.println("\nüîß ENDPOINT: POST /v1/rfqs/{id}/check-machine-capacity");
        System.out.println("üìã M√¥ t·∫£: Ki·ªÉm tra nƒÉng l·ª±c m√°y m√≥c theo m√¥ h√¨nh tu·∫ßn t·ª±");
        
        System.out.println("\nüìä QUY TR√åNH S·∫¢N XU·∫§T M·ªöI:");
        System.out.println("1Ô∏è‚É£  M·∫ÆC CU·ªíNG ‚Üí 2Ô∏è‚É£  D·ªÜT V·∫¢I ‚Üí 3Ô∏è‚É£  NHU·ªòM (VENDOR) ‚Üí 4Ô∏è‚É£  C·∫ÆT V·∫¢I ‚Üí 5Ô∏è‚É£  MAY TH√ÄNH PH·∫®M");
        
        System.out.println("\n‚è±Ô∏è  TH·ªúI GIAN CH·ªú GI·ªÆA C√ÅC C√îNG ƒêO·∫†N:");
        System.out.println("‚Ä¢ M·∫Øc ‚Üí D·ªát: 0.5 ng√†y");
        System.out.println("‚Ä¢ D·ªát ‚Üí Nhu·ªôm: 0.5 ng√†y");
        System.out.println("‚Ä¢ Nhu·ªôm ‚Üí C·∫Øt: 1.0 ng√†y");
        System.out.println("‚Ä¢ C·∫Øt ‚Üí May: 0.2 ng√†y");
        System.out.println("‚Ä¢ Sau May: 0.3 ng√†y");
        System.out.println("‚Ä¢ T·ªîNG TH·ªúI GIAN CH·ªú: 2.5 ng√†y");
        
        System.out.println("\nüè≠ TH√îNG TIN M√ÅY M√ìC:");
        System.out.println("‚Ä¢ M√°y m·∫Øc: 2 m√°y √ó 200 kg/ng√†y = 400 kg/ng√†y");
        System.out.println("‚Ä¢ M√°y d·ªát: 10 m√°y √ó 50 kg/ng√†y = 500 kg/ng√†y");
        System.out.println("‚Ä¢ Vendor nhu·ªôm: 2 ng√†y c·ªë ƒë·ªãnh");
        System.out.println("‚Ä¢ M√°y c·∫Øt: 5 m√°y √ó 150 c√°i/gi·ªù √ó 8 gi·ªù = 1200 c√°i/ng√†y");
        System.out.println("‚Ä¢ M√°y may: 5 m√°y √ó 150 c√°i/gi·ªù √ó 8 gi·ªù = 1200 c√°i/ng√†y");
        
        System.out.println("\nüìà C√ÅCH T√çNH TO√ÅN M·ªöI:");
        System.out.println("‚Ä¢ Th·ªùi gian t·ªïng = Œ£(Th·ªùi gian t·ª´ng c√¥ng ƒëo·∫°n) + Œ£(Th·ªùi gian ch·ªù)");
        System.out.println("‚Ä¢ Bottleneck = C√¥ng ƒëo·∫°n c√≥ th·ªùi gian d√†i nh·∫•t");
        System.out.println("‚Ä¢ Kh√¥ng c√≤n t√≠nh song song, m√† t√≠nh tu·∫ßn t·ª±");
        
        System.out.println("\nüéØ V√ç D·ª§ T√çNH TO√ÅN:");
        BigDecimal totalWeight = new BigDecimal("89");
        BigDecimal totalProducts = new BigDecimal("450");
        
        // T√≠nh th·ªùi gian t·ª´ng c√¥ng ƒëo·∫°n
        BigDecimal warpingDays = totalWeight.divide(new BigDecimal("400"), 2, java.math.RoundingMode.HALF_UP);
        BigDecimal weavingDays = totalWeight.divide(new BigDecimal("500"), 2, java.math.RoundingMode.HALF_UP);
        BigDecimal dyeingDays = new BigDecimal("2.0"); // Vendor c·ªë ƒë·ªãnh
        BigDecimal cuttingDays = totalProducts.divide(new BigDecimal("1200"), 2, java.math.RoundingMode.HALF_UP);
        BigDecimal sewingDays = totalProducts.divide(new BigDecimal("1200"), 2, java.math.RoundingMode.HALF_UP);
        
        BigDecimal totalWaitTime = new BigDecimal("2.5");
        BigDecimal totalDays = warpingDays.add(weavingDays).add(dyeingDays).add(cuttingDays).add(sewingDays).add(totalWaitTime);
        
        System.out.println("‚Ä¢ M·∫Øc: " + warpingDays + " ng√†y");
        System.out.println("‚Ä¢ D·ªát: " + weavingDays + " ng√†y");
        System.out.println("‚Ä¢ Nhu·ªôm: " + dyeingDays + " ng√†y");
        System.out.println("‚Ä¢ C·∫Øt: " + cuttingDays + " ng√†y");
        System.out.println("‚Ä¢ May: " + sewingDays + " ng√†y");
        System.out.println("‚Ä¢ Ch·ªù: " + totalWaitTime + " ng√†y");
        System.out.println("‚Ä¢ T·ªîNG: " + totalDays + " ng√†y");
        
        System.out.println("\n‚úÖ L·ª¢I √çCH C·ª¶A M√î H√åNH M·ªöI:");
        System.out.println("‚Ä¢ Ph·∫£n √°nh ƒë√∫ng quy tr√¨nh s·∫£n xu·∫•t th·ª±c t·∫ø");
        System.out.println("‚Ä¢ T√≠nh to√°n ch√≠nh x√°c th·ªùi gian giao h√†ng");
        System.out.println("‚Ä¢ Qu·∫£n l√Ω t·ªët h∆°n l·ªãch tr√¨nh s·∫£n xu·∫•t");
        System.out.println("‚Ä¢ Tr√°nh xung ƒë·ªôt t√†i nguy√™n gi·ªØa c√°c ƒë∆°n h√†ng");
        
        System.out.println("\nüöÄ API S·∫¥N S√ÄNG S·ª¨ D·ª§NG!");
    }
}
